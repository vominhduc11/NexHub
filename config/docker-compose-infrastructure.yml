# Infrastructure services only
# Use this for development when running business services locally

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nexhub-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=nexhub
      - POSTGRES_PASSWORD=voduc123
      - POSTGRES_MULTIPLE_DATABASES=nexhub_auth,nexhub_user,nexhub_notification,nexhub_product,nexhub_warranty,nexhub_blog
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/database:/docker-entrypoint-initdb.d
    networks:
      - nexhub-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nexhub"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nexhub_redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass voduc123 --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - nexhub-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "voduc123", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Zookeeper Cluster
  zookeeper1:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: nexhub_zookeeper1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
    volumes:
      - zookeeper1_data:/var/lib/zookeeper/data
      - zookeeper1_logs:/var/lib/zookeeper/log
    networks:
      - nexhub-network
    restart: unless-stopped

  zookeeper2:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: nexhub_zookeeper2
    ports:
      - "2182:2182"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
    volumes:
      - zookeeper2_data:/var/lib/zookeeper/data
      - zookeeper2_logs:/var/lib/zookeeper/log
    networks:
      - nexhub-network
    restart: unless-stopped

  zookeeper3:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: nexhub_zookeeper3
    ports:
      - "2183:2183"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2183
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888
    volumes:
      - zookeeper3_data:/var/lib/zookeeper/data
      - zookeeper3_logs:/var/lib/zookeeper/log
    networks:
      - nexhub-network
    restart: unless-stopped

  # Kafka Cluster
  kafka1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: nexhub_kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    volumes:
      - kafka1_data:/var/lib/kafka/data
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - nexhub-network
    restart: unless-stopped

  kafka2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: nexhub_kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    volumes:
      - kafka2_data:/var/lib/kafka/data
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - nexhub-network
    restart: unless-stopped

  kafka3:
    image: confluentinc/cp-kafka:7.4.0
    container_name: nexhub_kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
    volumes:
      - kafka3_data:/var/lib/kafka/data
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - nexhub-network
    restart: unless-stopped

  # Kafka UI for management
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: nexhub_kafka_ui
    ports:
      - "8078:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=nexhub-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:29092,kafka2:29093,kafka3:29094
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - nexhub-network
    restart: unless-stopped

  # Redis Commander for Redis management
  redis-commander:
    image: ghcr.io/joeferner/redis-commander:latest
    container_name: nexhub_redis_commander
    ports:
      - "8079:8081"
    environment:
      - REDIS_HOSTS=local:nexhub_redis:6379:0:voduc123
    depends_on:
      - redis
    networks:
      - nexhub-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  zookeeper1_data:
  zookeeper1_logs:
  zookeeper2_data:
  zookeeper2_logs:
  zookeeper3_data:
  zookeeper3_logs:
  kafka1_data:
  kafka2_data:
  kafka3_data:

networks:
  nexhub-network:
    driver: bridge