server:
  port: ${SERVER_PORT}

eureka:
  instance:
    hostname: ${EUREKA_INSTANCE_HOSTNAME}
    prefer-ip-address: ${EUREKA_INSTANCE_PREFER_IP}
  client:
    register-with-eureka: ${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
    fetch-registry: ${EUREKA_CLIENT_FETCH_REGISTRY}
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
  server:
    enable-self-preservation: ${EUREKA_SERVER_ENABLE_SELF_PRESERVATION}
    eviction-interval-timer-in-ms: ${EUREKA_SERVER_EVICTION_INTERVAL}

spring:
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: ${AUTH_SERVICE_URI}
          predicates:
            - Path=/api/auth/**
          filters:
            - StripPrefix=1

        - id: user-service
          uri: ${USER_SERVICE_URI}
          predicates:
            - Path=/api/user/**
          filters:
            - StripPrefix=1

        - id: notification-service
          uri: ${NOTIFICATION_SERVICE_URI}
          predicates:
            - Path=/api/notification/**
          filters:
            - StripPrefix=1

        - id: blog-service
          uri: ${BLOG_SERVICE_URI}
          predicates:
            - Path=/api/blog/**
          filters:
            - StripPrefix=1

        - id: warranty-service
          uri: ${WARRANTY_SERVICE_URI}
          predicates:
            - Path=/api/warranty/**
          filters:
            - StripPrefix=1

        - id: product-service
          uri: ${PRODUCT_SERVICE_URI}
          predicates:
            - Path=/api/product/**
          filters:
            - StripPrefix=1

        - id: language-service
          uri: ${LANGUAGE_SERVICE_URI}
          predicates:
            - Path=/api/language/**
          filters:
            - StripPrefix=1

      globals:
        corsConfigurations:
          '[/**]':
            allowedOrigins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080,http://localhost:5731}
            allowedMethods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
            allowedHeaders: ${CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers}
            allowCredentials: ${CORS_ALLOW_CREDENTIALS:true}

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    urls:
      - url: /api/auth/v3/api-docs
        name: Auth Service
      - url: /api/user/v3/api-docs
        name: User Service
      - url: /api/notification/v3/api-docs
        name: Notification Service
      - url: /api/blog/v3/api-docs
        name: Blog Service
      - url: /api/warranty/v3/api-docs
        name: Warranty Service
      - url: /api/product/v3/api-docs
        name: Product Service
      - url: /api/language/v3/api-docs
        name: Language Service
